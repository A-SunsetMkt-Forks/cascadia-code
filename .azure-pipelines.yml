trigger: none
pr:
  branches:
    include:
      - main

parameters:
  - name: mono
    displayName: Generate Cascadia Mono family
    type: boolean
    default: true
  - name: powerline
    displayName: Generate Cascadia Mono/Code PL
    type: boolean
    default: true
  - name: italic
    displayName: Generate Cascadia Mono/Code Italic
    type: boolean
    default: true
  - name: woff
    displayName: Generate WOFF2 fonts for web use
    type: boolean
    default: true
  - name: hinted
    displayName: Compile hinting instructions
    type: boolean
    default: true
  - name: static
    displayName: Generate static variants of all fonts
    type: boolean
    default: true

variables:
  - name: runCodesignValidationInjectionBG
    value: false
  - name: OPT_mono
    ${{ if eq(parameters.mono, true) }}:
      value: ""
    ${{ if eq(parameters.mono, false) }}:
      value: "-M"
  - name: OPT_powerline
    ${{ if eq(parameters.powerline, true) }}:
      value: ""
    ${{ if eq(parameters.powerline, false) }}:
      value: "-P"
  - name: OPT_static
    ${{ if eq(parameters.static, true) }}:
      value: "-S"
    ${{ if eq(parameters.static, false) }}:
      value: ""
  - name: OPT_italic
    ${{ if eq(parameters.italic, true) }}:
      value: ""
    ${{ if eq(parameters.italic, false) }}:
      value: "-I"
  - name: OPT_hinted
    ${{ if eq(parameters.hinted, true) }}:
      value: ""
    ${{ if eq(parameters.hinted, false) }}:
      value: "-V"
  - name: OPT_woff
    ${{ if eq(parameters.woff, true) }}:
      value: "-W"
    ${{ if eq(parameters.woff, false) }}:
      value: ""

jobs:
  - job: build
    displayName: Build Font
    pool:
      vmImage: macOS-latest
    steps:
      - task: UsePythonVersion@0
        displayName: 'Use Python 3.8'
        inputs:
          versionSpec: '3.8'

      - bash: |
         brew install ttfautohint
         pip install -r requirements.txt ufolint
        displayName: 'Install build dependencies'

      - bash: |
         ufolint sources/*.ufo
        displayName: 'Lint sources'

      - bash: |
         python ./build.py $(OPT_static) $(OPT_woff) $(OPT_hinted) $(OPT_mono) $(OPT_powerline) $(OPT_italic)
        displayName: 'Build selKected fonts'

      - bash: |
         mkdir -p out
         cd build
         zip -r ../out/CascadiaCode.zip ttf otf woff2
        displayName: 'Archive all fonts'

      - task: PublishPipelineArtifact@1
        displayName: 'Publish archive'
        inputs:
          targetPath: out
          artifact: 'archive'

